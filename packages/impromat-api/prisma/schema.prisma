datasource db {
  provider = "sqlite"
  url      = "file:dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model Element {
  id        String   @id @default(uuid())
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  version   Int
  deleted   Boolean  @default(false)

  name                String
  markdown            String?
  Tags                ElementTag[]
  note                String
  basedOnId           String?               @unique
  BasedOn             Element?              @relation("BasedOn", fields: [basedOnId], references: [id])
  ParentOf            Element[]             @relation("BasedOn")
  languageCode        String?
  sourceUrl           String?
  sourceName          String?
  sourceBaseUrl       String?
  licenseName         String?
  licenseUrl          String?
  userId              String?
  WorkshopSection     WorkshopSection?      @relation(fields: [sectionId], references: [id])
  sectionId           String?
  User                User?                 @relation(fields: [userId], references: [id])
  UserFavoriteElement UserFavoriteElement[]
}

model ElementTag {
  id        String   @id @default(uuid())
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  version   Int      @default(0)

  name     String
  elements Element[]
}

model UserFavoriteElement {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  version   Int      @default(0)

  userId    String
  elementId String
  Element   Element @relation(fields: [elementId], references: [id])
  User      User    @relation(fields: [userId], references: [id])

  @@id([userId, elementId])
}

model User {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  version   Int       @default(0)
  deleted   Boolean   @default(false)
  deletedAt DateTime?

  googleSubscriptionId String?               @unique
  FavoriteElements     UserFavoriteElement[]
  Workshops            Workshop[]
  Elements             Element[]
}

model Workshop {
  id        String   @id @default(uuid())
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  version   Int      @default(0)
  deleted   Boolean  @default(false)

  name        String
  description String?
  Sections    WorkshopSection[]
  Owner       User              @relation(fields: [ownerId], references: [id])
  ownerId     String
}

model WorkshopSection {
  id        String    @id @default(uuid())
  updatedAt DateTime  @updatedAt
  createdAt DateTime  @default(now())
  version   Int       @default(0)
  deleted   Boolean   @default(false)
  deletedAt DateTime?

  name        String
  color       String
  isVisible   Boolean
  isCollapsed Boolean
  workshopId  String?

  Elements Element[]
  Workshop Workshop? @relation(fields: [workshopId], references: [id])
}
