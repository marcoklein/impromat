name: Shared Test Job

on:
  workflow_call:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install
      - run: yarn codegen
      - run: |
          if git diff-index --quiet HEAD --; then
              echo "Codegen produced changes. Please run 'yarn codegen' and commit changes."
              exit 1
          fi
        name: Test if codegen has been run

      - run: yarn workspace:lint
      - run: yarn workspace:build
      - name: Run tests for all packages
        run: yarn workspace:test
        env:
          DEBUG: pw:webserver
      - name: Print backend infrastructure logs if tests failed
        if: failure()
        run: yarn docker-compose:logs
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: "**/*unit-results.xml"
      - name: Add succss status check
        uses: actions/github-script@v3
        if: success()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: 'success',
              context: 'test-report',
              description: 'Generated status check for release pipeline'
            })
      - name: Add failure status check
        uses: actions/github-script@v3
        if: failure()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: 'failure',
              context: 'test-report',
              description: 'Generated status check for release pipeline',
            })